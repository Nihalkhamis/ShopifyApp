// Generated by view binder compiler. Do not edit!
package com.gradle.shopifyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.gradle.shopifyapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addAddressBtn;

  @NonNull
  public final CircleImageView addressBtn;

  @NonNull
  public final RecyclerView addressRow;

  @NonNull
  public final TextView addressTitle;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final ConstraintLayout bottomLayout;

  @NonNull
  public final View bottomView;

  @NonNull
  public final View firstLine;

  @NonNull
  public final CircleImageView paymentBtn;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final View topView;

  private FragmentAddressBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addAddressBtn, @NonNull CircleImageView addressBtn,
      @NonNull RecyclerView addressRow, @NonNull TextView addressTitle, @NonNull ImageView backBtn,
      @NonNull ConstraintLayout bottomLayout, @NonNull View bottomView, @NonNull View firstLine,
      @NonNull CircleImageView paymentBtn, @NonNull ProgressBar progressbar,
      @NonNull View topView) {
    this.rootView = rootView;
    this.addAddressBtn = addAddressBtn;
    this.addressBtn = addressBtn;
    this.addressRow = addressRow;
    this.addressTitle = addressTitle;
    this.backBtn = backBtn;
    this.bottomLayout = bottomLayout;
    this.bottomView = bottomView;
    this.firstLine = firstLine;
    this.paymentBtn = paymentBtn;
    this.progressbar = progressbar;
    this.topView = topView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_address_btn;
      FloatingActionButton addAddressBtn = ViewBindings.findChildViewById(rootView, id);
      if (addAddressBtn == null) {
        break missingId;
      }

      id = R.id.address_btn;
      CircleImageView addressBtn = ViewBindings.findChildViewById(rootView, id);
      if (addressBtn == null) {
        break missingId;
      }

      id = R.id.address_row;
      RecyclerView addressRow = ViewBindings.findChildViewById(rootView, id);
      if (addressRow == null) {
        break missingId;
      }

      id = R.id.address_title;
      TextView addressTitle = ViewBindings.findChildViewById(rootView, id);
      if (addressTitle == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.bottom_layout;
      ConstraintLayout bottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.bottom_view;
      View bottomView = ViewBindings.findChildViewById(rootView, id);
      if (bottomView == null) {
        break missingId;
      }

      id = R.id.first_line;
      View firstLine = ViewBindings.findChildViewById(rootView, id);
      if (firstLine == null) {
        break missingId;
      }

      id = R.id.payment_btn;
      CircleImageView paymentBtn = ViewBindings.findChildViewById(rootView, id);
      if (paymentBtn == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.top_view;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new FragmentAddressBinding((ConstraintLayout) rootView, addAddressBtn, addressBtn,
          addressRow, addressTitle, backBtn, bottomLayout, bottomView, firstLine, paymentBtn,
          progressbar, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
