// Generated by view binder compiler. Do not edit!
package com.gradle.shopifyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.afollestad.viewpagerdots.DotsIndicator;
import com.gradle.shopifyapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton addToCartBtn;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final LinearLayout buttomLayout;

  @NonNull
  public final ImageView cartIcon;

  @NonNull
  public final RecyclerView colorRecyclerView;

  @NonNull
  public final TextView colorText;

  @NonNull
  public final TextView desc;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final DotsIndicator dots;

  @NonNull
  public final ImageView favoriteBtn;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final TextView productType;

  @NonNull
  public final ViewPager productViewPager;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RecyclerView reviewRecyclerView;

  @NonNull
  public final TextView reviewText;

  @NonNull
  public final RecyclerView sizeRecyclerView;

  @NonNull
  public final TextView sizeText;

  private ActivityProductDetailesBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton addToCartBtn, @NonNull ImageView backBtn,
      @NonNull LinearLayout buttomLayout, @NonNull ImageView cartIcon,
      @NonNull RecyclerView colorRecyclerView, @NonNull TextView colorText, @NonNull TextView desc,
      @NonNull TextView descriptionText, @NonNull DotsIndicator dots,
      @NonNull ImageView favoriteBtn, @NonNull TextView productName, @NonNull TextView productPrice,
      @NonNull TextView productType, @NonNull ViewPager productViewPager,
      @NonNull RatingBar ratingBar, @NonNull RecyclerView reviewRecyclerView,
      @NonNull TextView reviewText, @NonNull RecyclerView sizeRecyclerView,
      @NonNull TextView sizeText) {
    this.rootView = rootView;
    this.addToCartBtn = addToCartBtn;
    this.backBtn = backBtn;
    this.buttomLayout = buttomLayout;
    this.cartIcon = cartIcon;
    this.colorRecyclerView = colorRecyclerView;
    this.colorText = colorText;
    this.desc = desc;
    this.descriptionText = descriptionText;
    this.dots = dots;
    this.favoriteBtn = favoriteBtn;
    this.productName = productName;
    this.productPrice = productPrice;
    this.productType = productType;
    this.productViewPager = productViewPager;
    this.ratingBar = ratingBar;
    this.reviewRecyclerView = reviewRecyclerView;
    this.reviewText = reviewText;
    this.sizeRecyclerView = sizeRecyclerView;
    this.sizeText = sizeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_detailes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_to_cart_btn;
      AppCompatButton addToCartBtn = ViewBindings.findChildViewById(rootView, id);
      if (addToCartBtn == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.buttomLayout;
      LinearLayout buttomLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttomLayout == null) {
        break missingId;
      }

      id = R.id.cart_icon;
      ImageView cartIcon = ViewBindings.findChildViewById(rootView, id);
      if (cartIcon == null) {
        break missingId;
      }

      id = R.id.colorRecyclerView;
      RecyclerView colorRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (colorRecyclerView == null) {
        break missingId;
      }

      id = R.id.colorText;
      TextView colorText = ViewBindings.findChildViewById(rootView, id);
      if (colorText == null) {
        break missingId;
      }

      id = R.id.desc;
      TextView desc = ViewBindings.findChildViewById(rootView, id);
      if (desc == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.dots;
      DotsIndicator dots = ViewBindings.findChildViewById(rootView, id);
      if (dots == null) {
        break missingId;
      }

      id = R.id.favorite_btn;
      ImageView favoriteBtn = ViewBindings.findChildViewById(rootView, id);
      if (favoriteBtn == null) {
        break missingId;
      }

      id = R.id.productName;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.productPrice;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.productType;
      TextView productType = ViewBindings.findChildViewById(rootView, id);
      if (productType == null) {
        break missingId;
      }

      id = R.id.product_view_pager;
      ViewPager productViewPager = ViewBindings.findChildViewById(rootView, id);
      if (productViewPager == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.review_recycler_view;
      RecyclerView reviewRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (reviewRecyclerView == null) {
        break missingId;
      }

      id = R.id.review_text;
      TextView reviewText = ViewBindings.findChildViewById(rootView, id);
      if (reviewText == null) {
        break missingId;
      }

      id = R.id.size_recycler_view;
      RecyclerView sizeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (sizeRecyclerView == null) {
        break missingId;
      }

      id = R.id.size_text;
      TextView sizeText = ViewBindings.findChildViewById(rootView, id);
      if (sizeText == null) {
        break missingId;
      }

      return new ActivityProductDetailesBinding((ConstraintLayout) rootView, addToCartBtn, backBtn,
          buttomLayout, cartIcon, colorRecyclerView, colorText, desc, descriptionText, dots,
          favoriteBtn, productName, productPrice, productType, productViewPager, ratingBar,
          reviewRecyclerView, reviewText, sizeRecyclerView, sizeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
